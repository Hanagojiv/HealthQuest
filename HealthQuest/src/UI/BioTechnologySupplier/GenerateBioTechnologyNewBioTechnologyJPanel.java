/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.BioTechnologySupplier;


import Health.Chemical.Chemical;
import Health.Doctor.Patient;
import Health.BioTechnology.BioTechnology;
import Health.EcoSystem;
import Health.Gene.Gene;
import Health.Location.Location;
import Health.Organization.BioTechnologyOrganization;
import Health.UserAccount.UserAccount;
import Health.WorkQueue.BioTechnologyWorkRequest;
import Health.WorkQueue.LabTestWorkRequest;
import Health.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author vivekhanagoji
 */
public class GenerateBioTechnologyNewBioTechnologyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GenerateBioTechnologyNewBioTechnologyJPanel
     */
    private JPanel userProcessContainer;
    private Patient patient;
    private BioTechnologyOrganization BioTechnologyOrganization;
    private UserAccount userAccount;
    private Location network;
    private EcoSystem business;
    private static Logger log = Logger.getLogger(GenerateBioTechnologyNewBioTechnologyJPanel.class);
    private static final String CLASS_NAME = GenerateBioTechnologyNewBioTechnologyJPanel.class.getName();

    public GenerateBioTechnologyNewBioTechnologyJPanel(JPanel userProcessContainer, Patient patient, BioTechnologyOrganization BioTechnologyOrganization, UserAccount userAccount, Location network,EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        this.BioTechnologyOrganization = BioTechnologyOrganization;
        this.userAccount = userAccount;
        this.network = network;
        this.business = business;
        patientTxtField.setText(patient.getPatientName());
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        newBioTechnologyTbl = new javax.swing.JTable();
        patientNameLbl = new javax.swing.JLabel();
        patientTxtField = new javax.swing.JTextField();
        resultLbl = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        addnewBioTechnologyBtn = new javax.swing.JButton();
        newBioTechnologyTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        newBioTechnologyTbl.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 20)); // NOI18N
        newBioTechnologyTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Gene", "Chemical Compound"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        newBioTechnologyTbl.setRowHeight(30);
        jScrollPane.setViewportView(newBioTechnologyTbl);

        add(jScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 168, 650, 240));

        patientNameLbl.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        patientNameLbl.setForeground(new java.awt.Color(0, 0, 102));
        patientNameLbl.setText("Patient Name :");
        add(patientNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 99, 170, 30));

        patientTxtField.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        patientTxtField.setEnabled(false);
        add(patientTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 99, 294, 30));

        resultLbl.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        resultLbl.setForeground(new java.awt.Color(0, 0, 102));
        resultLbl.setText("New Drug");
        add(resultLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(404, 29, -1, -1));

        backBtn.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        backBtn.setForeground(new java.awt.Color(0, 0, 102));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 540, 170, -1));

        addnewBioTechnologyBtn.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        addnewBioTechnologyBtn.setForeground(new java.awt.Color(0, 0, 102));
        addnewBioTechnologyBtn.setText("Add New Drug");
        addnewBioTechnologyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addnewBioTechnologyBtnActionPerformed(evt);
            }
        });
        add(addnewBioTechnologyBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 440, 220, 41));
        add(newBioTechnologyTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, 267, 41));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/BioTechnologySupplier/134682640-vector-health-seamless-pattern-illustration-background-with-medicine-and-pharmacy-items-wallpaper-of.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) newBioTechnologyTbl.getModel();

        List<String> newDiseaseGenes = new ArrayList<String>();
        for (Gene gene : patient.getGeneHistory().getGeneHistory()) {
            newDiseaseGenes.add(gene.getGeneName());
        }

        int i = 0;
        Map<String, String> GeneChem = new TreeMap<String, String>((String.CASE_INSENSITIVE_ORDER));
        for (BioTechnology d : business.getBioTechnologyList().getBioTechnologyList()) {

            for (i = 0; i < d.getChemicalList().getChemList().size(); i++) {

                Chemical c = d.getChemicalList().getChemList().get(i);
                Gene g = d.getGeneHistory().getGeneHistory().get(i);
                GeneChem.put(g.getGeneName(), c.getChemicalName());
            }

        }

        Map<String, String> newBioTechnologyFinal = new TreeMap<String, String>((String.CASE_INSENSITIVE_ORDER));
        for (String s : newDiseaseGenes) {

            if (GeneChem.containsKey(s)) {

                newBioTechnologyFinal.put(s, GeneChem.get(s));
            }
        }

        for (Map.Entry<String, String> entry : newBioTechnologyFinal.entrySet()) {
            String key = entry.getKey();
            String values = entry.getValue();
            Object[] row = new Object[2];
            row[0] = key;
            row[1] = values;
            model.addRow(row);
        }

    }
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        LabResultsJpanel dwjp = (LabResultsJpanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void addnewBioTechnologyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addnewBioTechnologyBtnActionPerformed
        // TODO add your handling code here:
        String BioTechnologyName = newBioTechnologyTxt.getText().trim();
        if(BioTechnologyName.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter the BioTechnology name");
            return;
        }
        ArrayList<String>BioTechnologyCheck = new ArrayList<>();
        for(BioTechnology d:business.getBioTechnologyList().getBioTechnologyList())
        {
            BioTechnologyCheck.add(d.getBioTechnologyName().toLowerCase());
        }
        if(BioTechnologyCheck.contains(BioTechnologyName))
        {
             JOptionPane.showMessageDialog(null, " BioTechnology name already exists ");
            return;
        }
        BioTechnology d = business.getBioTechnologyList().addBioTechnologyList();
        d.setBioTechnologyName(BioTechnologyName);
        patient.setNewBioTechnology(BioTechnologyName);
        int count = newBioTechnologyTbl.getRowCount();
        for (int i = 0; i < count; i++) {
            String s = newBioTechnologyTbl.getValueAt(i, 0).toString();
            d.getGeneHistory().addGeneList().setGeneName(s);
            String t = newBioTechnologyTbl.getValueAt(i, 1).toString();
            d.getChemicalList().addChemicalList().setChemicalName(t);

        }
        JOptionPane.showMessageDialog(null,"New BioTechnology is added succesfully");
        log.debug(userAccount+" "+"added new BioTechnology"+" "+BioTechnologyName);


    }//GEN-LAST:event_addnewBioTechnologyBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addnewBioTechnologyBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable newBioTechnologyTbl;
    private javax.swing.JTextField newBioTechnologyTxt;
    private javax.swing.JLabel patientNameLbl;
    private javax.swing.JTextField patientTxtField;
    private javax.swing.JLabel resultLbl;
    // End of variables declaration//GEN-END:variables
}
