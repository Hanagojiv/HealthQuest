/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.BioTechnologySupplier;


import Health.Chemical.Chemical;
import Health.BioTechnology.BioTechnology;
import Health.BioTechnology.BioTechnologyList;
import Health.EcoSystem;
import Health.Enterprise.Enterprise;
import Health.Gene.Gene;
import Health.Location.Location;
import Health.Organization.BioTechnologyOrganization;
import Health.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author vivekhanagoji
 */
public class AddChemicalsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddChemicalsJPanel
     */
    private BioTechnology BioTechnology;
    private BioTechnologyList BioTechnologyList;
     private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private BioTechnologyOrganization BioTechnologyOrganization ;
    private Enterprise enterprise;
    private Object e;
    private static Logger log = Logger.getLogger(AddChemicalsJPanel.class);
    private static final String CLASS_NAME = AddChemicalsJPanel.class.getName();
    
    private Location network;
    public AddChemicalsJPanel(JPanel userProcessContainer,EcoSystem business,UserAccount userAccount,BioTechnologyOrganization organization,Enterprise enterprise,Location network,BioTechnology BioTechnology) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.enterprise = enterprise;
        this.network = network;
        this.BioTechnology = BioTechnology;
        this.BioTechnologyOrganization = (BioTechnologyOrganization)organization;
        populateTable();
    }
    
    public void populateTable(){
         DefaultTableModel model = (DefaultTableModel)chemicalGeneTbl.getModel();
        
        model.setRowCount(0);
        Object[] row = new Object[2];
        int i = 0;
            for(Chemical c : BioTechnology.getChemicalList().getChemList()){
                 
                 row[0] = c.getChemicalName();
                 
                    
                    Gene g=  BioTechnology.getGeneHistory().getGeneHistory().get(i);
                      
                      row[1] = g.getGeneName();
                      model.addRow(row);
                     i++;
                 }
                 
            
         
        
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        chemicalGeneTbl = new javax.swing.JTable();
        chemicalTxt = new javax.swing.JTextField();
        GeneTextField = new javax.swing.JTextField();
        chemicalLabel = new javax.swing.JLabel();
        geneLabel = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        processlbl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(null);

        chemicalGeneTbl.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 20)); // NOI18N
        chemicalGeneTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ChemicalName", "GeneName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        chemicalGeneTbl.setRowHeight(30);
        chemicalGeneTbl.getTableHeader().setResizingAllowed(false);
        chemicalGeneTbl.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(chemicalGeneTbl);

        add(jScrollPane1);
        jScrollPane1.setBounds(169, 139, 630, 150);

        chemicalTxt.setFont(new java.awt.Font("Microsoft JhengHei Light", 0, 20)); // NOI18N
        chemicalTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chemicalTxtActionPerformed(evt);
            }
        });
        add(chemicalTxt);
        chemicalTxt.setBounds(471, 357, 200, 31);

        GeneTextField.setFont(new java.awt.Font("Microsoft JhengHei Light", 0, 20)); // NOI18N
        add(GeneTextField);
        GeneTextField.setBounds(470, 410, 200, 31);

        chemicalLabel.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        chemicalLabel.setForeground(new java.awt.Color(255, 255, 255));
        chemicalLabel.setText("ChemicalName");
        add(chemicalLabel);
        chemicalLabel.setBounds(266, 361, 129, 24);

        geneLabel.setFont(new java.awt.Font("Times New Roman", 3, 20)); // NOI18N
        geneLabel.setForeground(new java.awt.Color(255, 255, 255));
        geneLabel.setText("GeneName");
        add(geneLabel);
        geneLabel.setBounds(270, 410, 150, 24);

        addBtn.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 24)); // NOI18N
        addBtn.setForeground(new java.awt.Color(0, 0, 102));
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        add(addBtn);
        addBtn.setBounds(690, 530, 110, 36);

        backBtn.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 24)); // NOI18N
        backBtn.setForeground(new java.awt.Color(0, 0, 102));
        backBtn.setText(" Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn);
        backBtn.setBounds(170, 520, 95, 36);

        processlbl.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        processlbl.setForeground(new java.awt.Color(255, 255, 255));
        processlbl.setText("Chemical and Gene Names");
        add(processlbl);
        processlbl.setBounds(150, 60, 539, 53);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/BioTechnologySupplier/chem.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2);
        jLabel2.setBounds(0, 0, 960, 780);
    }// </editor-fold>//GEN-END:initComponents

    private void chemicalTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chemicalTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chemicalTxtActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
         String chemicalName = chemicalTxt.getText().trim();
         String geneName = GeneTextField.getText().trim();
         if(chemicalName.isEmpty())
         {
             JOptionPane.showMessageDialog(null,"Please enter the chemical name");
             return;
         }
         if(geneName.isEmpty())
         {
             JOptionPane.showMessageDialog(null, "please enter the gene name ");
             return;
         }
         ArrayList<String> chemicalCheck = new ArrayList<>();
         for(Chemical c : BioTechnology.getChemicalList().getChemList())
         {
             chemicalCheck.add(c.getChemicalName().toLowerCase());
             
         }
         ArrayList<String>genecheck= new ArrayList<>();
         for(Gene g:BioTechnology.getGeneHistory().getGeneHistory())
         {
             genecheck.add(g.getGeneName().toLowerCase());
         }
         if(chemicalCheck.contains(chemicalName.toLowerCase()))
         {
             JOptionPane.showMessageDialog(null,"Chemical already exists in the BioTechnology ");
             return;
             
         }
         if(genecheck.contains(geneName.toLowerCase()))
         {
          JOptionPane.showMessageDialog(null,"Gene already exists in the BioTechnology ");
             return;   
         }
        BioTechnology.getChemicalList().addChemicalList().setChemicalName(chemicalName);
        BioTechnology.getGeneHistory().addGeneList().setGeneName(geneName);
       
        populateTable();
        log.debug(userAccount+" "+"added chemicals and genes to BioTechnology"+" "+BioTechnology);
        chemicalTxt.setText("");
        GeneTextField.setText("");
    }//GEN-LAST:event_addBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AddBioTechnologyJPanel dwjp = (AddBioTechnologyJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField GeneTextField;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTable chemicalGeneTbl;
    private javax.swing.JLabel chemicalLabel;
    private javax.swing.JTextField chemicalTxt;
    private javax.swing.JLabel geneLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel processlbl;
    // End of variables declaration//GEN-END:variables
}
