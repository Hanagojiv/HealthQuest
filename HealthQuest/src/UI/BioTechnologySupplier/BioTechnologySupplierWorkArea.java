/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.BioTechnologySupplier;

import UI.BioTechnologySupplier.*;
import Health.EcoSystem;
import Health.Enterprise.Enterprise;
import Health.Location.Location;
import Health.Organization.BioTechnologyOrganization;
import Health.Organization.Organization;
import Health.UserAccount.UserAccount;
import Health.WorkQueue.BioTechnologyWorkRequest;
import Health.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import UI.BioTechnologySupplier.ProcessBioTechnologyWorkRequest;

/**
 *
 * @author vivekhanagoji
 */
public class BioTechnologySupplierWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form BioTechnologySupplierWorkArea
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private BioTechnologyOrganization BioTechnologyOrganization;
    private Enterprise enterprise;
    private Location network;
    private static Logger log = Logger.getLogger(BioTechnologySupplierWorkArea.class);
    private static final String CLASS_NAME = BioTechnologySupplierWorkArea.class.getName();

    public BioTechnologySupplierWorkArea(JPanel userProcessContainer, EcoSystem business, UserAccount userAccount, Organization organization, Enterprise enterprise, Location network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.enterprise = enterprise;
        this.network = network;
        this.BioTechnologyOrganization = (BioTechnologyOrganization) organization;
        log.debug(userAccount+" "+"logged in BioTechnology work area");
        populateTable();
    }

    public void populateTable() {

        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);

        for (WorkRequest request : BioTechnologyOrganization.getWorkQueue().getWorkRequestList()) {
            if (((BioTechnologyWorkRequest) request).getPatient() == null) {
                Object[] row = new Object[6];
                row[0] = ((BioTechnologyWorkRequest) request);
                row[1] = ((BioTechnologyWorkRequest) request).getQuantity();
                row[2] = request.getSender().getEmployee().getName();
                row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
                row[4] = request.getStatus();
                row[5] = ((BioTechnologyWorkRequest) request).getDeliveryTime();

                model.addRow(row);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignBtn = new javax.swing.JButton();
        reqChemButton = new javax.swing.JButton();
        processBtn = new javax.swing.JButton();
        labRequestButton = new javax.swing.JButton();
        addBioTechnologyButton = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 204, 255));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("BioTechnology SUPPLIER WORK AREA ");
        add(jLabel1);
        jLabel1.setBounds(150, 70, 850, 53);

        workRequestJTable.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 20)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Name", "Quantity", "Sender", "Receiver", "Status", "Delivery Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.setRowHeight(30);
        jScrollPane2.setViewportView(workRequestJTable);

        add(jScrollPane2);
        jScrollPane2.setBounds(36, 166, 1240, 290);

        assignBtn.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        assignBtn.setForeground(new java.awt.Color(0, 0, 102));
        assignBtn.setText("Assign to me");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn);
        assignBtn.setBounds(160, 530, 220, 35);

        reqChemButton.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        reqChemButton.setForeground(new java.awt.Color(0, 0, 102));
        reqChemButton.setText("request chemical");
        reqChemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqChemButtonActionPerformed(evt);
            }
        });
        add(reqChemButton);
        reqChemButton.setBounds(148, 626, 199, 62);

        processBtn.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        processBtn.setForeground(new java.awt.Color(0, 0, 102));
        processBtn.setText("Process");
        processBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processBtnActionPerformed(evt);
            }
        });
        add(processBtn);
        processBtn.setBounds(540, 530, 230, 35);

        labRequestButton.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        labRequestButton.setForeground(new java.awt.Color(0, 0, 102));
        labRequestButton.setText("View Lab Requests");
        labRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labRequestButtonActionPerformed(evt);
            }
        });
        add(labRequestButton);
        labRequestButton.setBounds(518, 636, 260, 50);

        addBioTechnologyButton.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        addBioTechnologyButton.setForeground(new java.awt.Color(0, 0, 102));
        addBioTechnologyButton.setText("ADD DRUG");
        addBioTechnologyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBioTechnologyButtonActionPerformed(evt);
            }
        });
        add(addBioTechnologyButton);
        addBioTechnologyButton.setBounds(928, 636, 190, 50);

        refreshBtn.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(0, 0, 102));
        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        add(refreshBtn);
        refreshBtn.setBounds(930, 530, 169, 35);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/BioTechnologySupplier/bio.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2);
        jLabel2.setBounds(2, -3, 1320, 780);
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a row ");
            return;
        }
        //to check whether the the task is already assigned list 
        if (workRequestJTable.getValueAt(selectedRow, 4) != null) {

            if (workRequestJTable.getValueAt(selectedRow, 4).equals("Assigned")) {
                JOptionPane.showMessageDialog(null, "Task is already assigned");
                return;
            }
        }
        //to set the falg if already theere existing job
        int flag = 0;
        for (WorkRequest request : BioTechnologyOrganization.getWorkQueue().getWorkRequestList()) {

            if (request.getStatus() == null) {
                continue;
            }
            if (request.getStatus().equals("Assigned")) {
                if (request.getReceiver() != null) {
                    if (userAccount.getUsername().equalsIgnoreCase(request.getReceiver().toString())) {
                        flag = 1;
                    }
                }
            }
        }
        if (flag == 1) {
            JOptionPane.showMessageDialog(null, "Please complete the existing request before taking a new request");
            return;

        }
        int flag1 = 0;
        for (WorkRequest request : BioTechnologyOrganization.getWorkQueue().getWorkRequestList()) {

            if (request.getStatus() == null) {
                continue;
            }
            if (request.getStatus().equals("Processing")) {
                if (request.getReceiver() != null) {
                    if (userAccount.getUsername().equalsIgnoreCase(request.getReceiver().toString())) {
                        flag1 = 1;
                    }
                }
            }
        }
        if (flag1 == 1) {
            JOptionPane.showMessageDialog(null, "Please complete the existing request before taking a new request");
            return;

        }

        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Assigned");
        log.debug(userAccount+" "+"assigned himself a task");
        populateTable();
    }//GEN-LAST:event_assignBtnActionPerformed

    private void reqChemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqChemButtonActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        log.debug(userAccount+" "+"entering chemical requests page");
        userProcessContainer.add("ViewChemicalsRequestJPanel", new ViewChemicalRequestsJPanel(userProcessContainer, userAccount, enterprise, BioTechnologyOrganization, network));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_reqChemButtonActionPerformed

    private void processBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
            return;
        }

        BioTechnologyWorkRequest request = (BioTechnologyWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        if (workRequestJTable.getValueAt(selectedRow, 4) == null) {
            JOptionPane.showMessageDialog(null, "Task is not assigned to you for process");
            return;
        }
        int flag = 0;

        if (workRequestJTable.getValueAt(selectedRow, 4).equals("Processing") && userAccount.getUsername().equalsIgnoreCase(request.getReceiver().toString())) {

            flag = 1;
        }
        if (flag != 1) {
            if (workRequestJTable.getValueAt(selectedRow, 4) != null) {

                if (!(((workRequestJTable.getValueAt(selectedRow, 4).equals("Assigned"))) && (userAccount.getUsername().equalsIgnoreCase(request.getReceiver().toString())))) {
                    JOptionPane.showMessageDialog(null, "Task is not assigned to you for process");
                    return;
                }
            }
        }

        request.setStatus("Processing");

        ProcessBioTechnologyWorkRequest processWorkRequestJPanel = new ProcessBioTechnologyWorkRequest(userProcessContainer, request);
        userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        log.debug(userAccount+" "+"entering processing page");
        layout.next(userProcessContainer);
    }//GEN-LAST:event_processBtnActionPerformed

    private void labRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labRequestButtonActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        log.debug(userAccount+" "+"entering lab requests page");
        userProcessContainer.add("LabResultsJPanel", new LabResultsJpanel(userProcessContainer, userAccount, enterprise, BioTechnologyOrganization, network, business));
        layout.next(userProcessContainer);

    }//GEN-LAST:event_labRequestButtonActionPerformed

    private void addBioTechnologyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBioTechnologyButtonActionPerformed
        // TODO add your handling code here:

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        log.debug(userAccount+" "+"entering BioTechnology adding page");
        userProcessContainer.add("AddBioTechnologyJPanel", new AddBioTechnologyJPanel(userProcessContainer, business, userAccount, BioTechnologyOrganization, enterprise, network));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addBioTechnologyButtonActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBioTechnologyButton;
    private javax.swing.JButton assignBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton labRequestButton;
    private javax.swing.JButton processBtn;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton reqChemButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
